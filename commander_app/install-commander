#!/bin/bash

# Author: Robert H Cudmore
# Date: 20180607
# Purpose: Bash script to install and run commander_app
#	1) create a python3 virtual environment
#	2) install commander_app/requirements.txt
#	3) install a systemctl service videowall.service
#
# Usage:
#	./install-commander
#
# Once this is all done, commander server can be used as follows
#	cd ~/pie/commander
#	./commander start
#	./commander stop
#	./commander restart
#	./commander status
#	./commander enable		# start commander server at boot
#	./commander disable		# do not start commander server at boot

if [ $(id -u) = 0 ]; then
   echo "Do not run with sudo. Try again without sudo"
   exit 1
fi

ip=`hostname -I | xargs`

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

sudo systemctl stop videowall.service

if ! type "pip" > /dev/null; then
	echo '==='
	echo "=== Installing pip"
	echo '==='
	sudo apt-get -y install python-pip
fi

if ! type "virtualenv" > /dev/null; then
	echo '==='
	echo "=== Installing virtualenv"
	echo '==='
	sudo /usr/bin/easy_install virtualenv
fi

if [ ! -d "commander_env/" ]; then
	echo '==='
	echo "=== Making Python 3 virtual environment in $PWD/commander_env"
	echo '==='
	mkdir env
	virtualenv -p python3 --no-site-packages commander_env
else
	echo '==='
	echo "=== Python 3 virtual environment already exists in $PWD/commander_env"
	echo '==='
fi

if [ -f "commander_env/bin/activate" ]; then
	echo '==='
	echo "=== Activating virtual environment with 'source commander_env/bin/activate'"
	echo '==='
	source commander_env/bin/activate
else
	echo -e "${RED}ERROR${NC}: Python 3 virtual environment did not install in $PWD/commander_env"
	echo "Make sure virtualenv is installed and try installing again"
	exit 1
fi

echo ' '
echo '==='
echo "=== Installing commander Python requirements with 'pip install -r requirements.txt'"
echo '==='
pip install -r requirements.txt

echo '==='
echo "=== Deactivating virtual environment with 'deactivate'"
echo '==='
deactivate

# copy 
echo ' '
echo '==='
echo '=== Configuring systemctl in /etc/systemd/system/videowall.service'
echo '==='
echo '=== Copying service/videowall.service  ->  /etc/systemd/system/videowall.service'
sudo cp service/videowall.service /etc/systemd/system/videowall.service
sudo chmod 664 /etc/systemd/system/videowall.service

echo '=== Reloading system daemons'
sudo systemctl daemon-reload

echo '=== Enabling and starting videowall.service  (with enable will run at boot)'
sudo systemctl enable videowall.service
sudo systemctl start videowall.service


if false;
then
	echo ' '
	echo '==='
	echo '=== Configuring git server in ~/commander.git'
	echo '    You will get non critical errors if you run this script more than once'
	echo '==='

	# this would clone a copy of PiE
	mkdir ~/commander.git
	cd ~/commander.git
	git init --bare
	git clone https://github.com/cudmore/pie.git

	echo ' '
	echo '==='
	echo '=== Installing sshpass and configuring ssh-keygen rsa'
	echo '==='

	sudo apt-get install --yes sshpass

	#ssh-keygen
	rm /home/pi/.ssh/id_rsa
	#rm /home/pi/.ssh/id_rsa.pub
	ssh-keygen -t rsa -N '' -f /home/pi/.ssh/id_rsa

fi

echo ' '

systemctl is-active --quiet videowall.service
if [ $? -eq 0 ]
then
	echo -e "${GREEN}Success${NC}: The commander server is running and will run at boot."
	echo "Browse the commander server at http://$ip:8000"
else
	echo -e "${RED}ERROR${NC}: The commander server failed to install and is not running."
fi
echo ' '


